import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { useFetch } from '../hooks/useFetch';
import { v4 as uuidv4 } from 'uuid';
import { useEffect, useState } from 'react';

type CakeProp = {
  nome_bolo: string;
  id: number;
  index: any;
};

type IngredientProp = {
  nome_ingrediente: string;
  quantidade: number;
  unidade: string;
};

export default function Home() {
  const { data: cakes, error } = useFetch<CakeProp[]>('/api/cakes');
  const { data: ingredientsList, error: errorList } = useFetch<
    IngredientProp[]
  >('/api/ingredients-count');
  console.log('ingredientsList', ingredientsList);
  const [list, setList] = useState([]);
  const [cakesList, setCakesList] = useState([]);

  // const [loading, setLoading] = useState(false);
  // console.log('cakes', cakes);

  useEffect(() => {
    if (cakes && cakes.length > 0) {
      let result = Object.values(
        cakes.reduce((r, o) => {
          r[o.nome_bolo] = r[o.nome_bolo] || {
            Bolo: o.nome_bolo,
            totalItemQuantity: 0,
          };
          r[o.nome_bolo].totalItemQuantity += 1;
          return r;
        }, {})
      );
      setCakesList(result);
    }
  }, [cakes]);

  console.log('cakes', cakes);

  if (error || errorList) {
    return <p>Error</p>;
  }

  if (!cakes) {
    return <p>Loading...</p>;
  }
  console.log(Object.keys(cakes[0]));

  return (
    <div>
      <Head>
        <title>Bolos</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <div>
          {ingredientsList?.map(i => {
            return (
              <div key={uuidv4()} style={{ display: 'flex' }}>
                <p style={{ fontWeight: 'bold' }}>{i.nome_ingrediente}</p>
                <p>{i.quantidade}</p>
                <p>{i.unidade}</p>
              </div>
            );
          })}
        </div>
        {/* {cakes?.map(cake => {
          return (
            <div key={uuidv4()}>
              <h2>{cake.nome_bolo}</h2>
              {Object.keys(cake)
                .filter(key => ['id'].indexOf(key) === -1)
                .filter(key => ['nome_id '].indexOf(key) === -1)
                .map(fkey =>
                  cake[fkey] > 0 || typeof cake[fkey] === 'string' ? (
                    <p key={uuidv4()}>
                      {fkey} {cake[fkey]}
                    </p>
                  ) : null
                )}
            </div>
          );
        })} */}
        {cakesList.map(c => {
          return (
            <div key={uuidv4()}>
              <h2>
                {c.Bolo}: {c.totalItemQuantity}
              </h2>
            </div>
          );
        })}
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

// export async function getServerSideProps() {
//   const { data } = await axios.get('/api/cakes');

//   return {
//     props: {
//       cakes: data,
//     },
//   };
// }
